#!/usr/bin/python
import os,sys,re

#
# Burns an image's frame# into an output COPY of the image
#     Does not modify the original image.
#

def ParseSequence(filename, ext):
    '''Return the pathname and frame# part of a sequence's filename.
       Returns (None,None) if could not be determined.
       Example:
              file: "/path/foo.01234.exr"
               ext: ".exr"
           Returns: ( "/path/foo.", "01234" )
    '''
    # Focus on the part we don't want (frm# and .ext)..
    # ..then return the part we want (everything preceding)
    try:
        framestr = re.search("([0-9]*)"+ext+"$", filename).groups()[0]  # "/path/foo.0123.ext" -> "0123"
        basepath = filename[:-len(framestr+ext)]                        # "/path/foo.0123.ext" -> "/path/foo."
        return (basepath, framestr)
    except:
        return (None,None)



#
# MAIN: Test the module
#
if __name__ == "__main__":

    if len(sys.argv) != 3:
	print("usage: %s infile outfile" % sys.argv[0])
	sys.exit(1)

    infile =sys.argv[1]
    outfile=sys.argv[2]
    font   = "routed-gothic-narrow"		# .ttf exists on harris - https://usemodify.com/fonts/routed-gothic-font/
    xoff   = 50
    yoff   = 50

    (path,frm) = ParseSequence(infile, ".png")
    print(" IN: %s" % infile)
    print("OUT: %s" % outfile)
    print("FRM: %s" % frm)

    os.system('convert %s -gravity southeast -fill red -font %s -pointsize 28 -annotate +%d+%d "%s" %s' % \
        (infile, font, xoff,yoff, frm, outfile))

